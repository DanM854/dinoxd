import React, { useState } from "react";
import "./App.css";

export default function DinoChat() {
  const [selectedIndex, setSelectedIndex] = useState("");
  const [selectedDesc, setSelectedDesc] = useState("");
  const [chatHistory, setChatHistory] = useState([]);
  const [userMessage, setUserMessage] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  // üì° URL de la API
  const CHAT_API_URL = process.env.REACT_APP_CHAT_API_URL || "http://localhost:11435";

  // ü¶ï Lista de dinosaurios
  const dinos = [
    "Austroraptor",
    "Iorosaursaurus",
    "Ianaurus",
    "Aoraurus",
    "Onoanaus",
    "Ianorausaurus",
    "Aosaurus",
    "Eonoraos",
    "Osausaus",
    "Aonasiar"
  ];

  // üìò Descripciones
  const descs = [
    "Un dromeosaurido carn√≠voro de tama√±o considerable (aprox. 8-10 metros de largo), caracterizado por robustas extremidades anteriores adaptadas para una poderosa mordida y un pico √≥seo en la boca...",
    "Un robusto ter√≥podo mesozoico del Cret√°cico Superior con una espina cervical alta, especializado en presas grandes.",
    "Un gran saur√≥podo herb√≠voro de cuello extendido, adaptado para alcanzar las copas de los √°rboles.",
    "Un tit√°n ter√≥podo del Cret√°cico Superior, de hasta 35 metros de largo, con garras delanteras afiladas e indicios de ser un depredador apical.",
    "Herb√≠voro mediano del grupo de los titanosaurios con cuello largo y piel escamosa con posibles crestas √≥seas.",
    "Titanosaurio herb√≠voro gigante con cuello largo, cola robusta y escudo dorsal.",
    "Gigantesco ter√≥podo carn√≠voro de 40 metros, con mand√≠bulas poderosas y una musculatura masiva.",
    "Depredador robusto con mand√≠bula fuerte y dientes adaptados a triturar huesos.",
    "Ter√≥podo robusto de tama√±o mediano, con huesos densos y fuerte musculatura.",
    "Ter√≥podo herb√≠voro robusto con pico c√≥rneo √≥seo, adaptado a cortar vegetaci√≥n densa."
  ];

  // üéØ Manejar selecci√≥n de dinosaurio
  function handleSelect(e) {
    const index = e.target.value;
    setSelectedIndex(index);
    setSelectedDesc(descs[index] || "");
    setChatHistory([]);
    console.log("ü¶ñ Seleccionado:", dinos[index]);
  }

  // üí¨ Enviar mensaje
  async function handleSend() {
    if (!selectedIndex) {
      setError("Selecciona un dinosaurio primero.");
      return;
    }
    if (!userMessage.trim()) return;

    const name = dinos[selectedIndex];
    const description = selectedDesc;
    const message = userMessage.trim();

    setError(null);
    setUserMessage("");
    setLoading(true);
    setChatHistory((prev) => [...prev, { role: "user", text: message }]);

    try {
      console.log("üì§ Enviando a API:", `${CHAT_API_URL}/ask`);
      console.log("üßæ Payload:", { name, desc: description, message });

      const res = await fetch(`${CHAT_API_URL}/ask`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, desc: description, message }),
      });

      if (!res.ok) throw new Error(`Error HTTP ${res.status}`);
      const data = await res.json();

      console.log("üìó Respuesta recibida:", data);

      const reply = data.answer || data.response || "El dinosaurio no respondi√≥...";
      setChatHistory((prev) => [...prev, { role: "dino", text: reply }]);
    } catch (err) {
      console.error("‚ùå Error:", err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="dino-chat-container">
      <header className="chat-header">
        <h1>ü¶ï Chat Jur√°sico</h1>
        <p>Habla con dinosaurios</p>
      </header>

      <section className="chat-section">
        <label>Selecciona un dinosaurio:</label>
        <select value={selectedIndex} onChange={handleSelect}>
          <option value="">‚Äî Elige uno ‚Äî</option>
          {dinos.map((dino, i) => (
            <option key={i} value={i}>
              {dino}
            </option>
          ))}
        </select>

        {selectedDesc && (
          <div className="dino-desc">
            <h3>Descripci√≥n</h3>
            <p>{selectedDesc}</p>
          </div>
        )}
      </section>

      <section className="chat-box">
        <div className="chat-history">
          {chatHistory.map((msg, i) => (
            <div key={i} className={`chat-msg ${msg.role}`}>
              <strong>{msg.role === "user" ? "T√∫:" : dinos[selectedIndex] + ":"}</strong>{" "}
              {msg.text}
            </div>
          ))}
        </div>

        <div className="chat-input">
          <textarea
            rows="3"
            placeholder="Escribe tu mensaje..."
            value={userMessage}
            onChange={(e) => setUserMessage(e.target.value)}
            disabled={loading}
          />
          <button onClick={handleSend} disabled={loading}>
            {loading ? "ü¶ñ Pensando..." : "Enviar"}
          </button>
        </div>

        {error && <div className="error">‚ùå {error}</div>}
      </section>
    </div>
  );
}
